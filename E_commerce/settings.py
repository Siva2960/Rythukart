"""
Django settings for E_commerce project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-586mu!2$(w923z^y&_^_^&6m7et&d_u%#f%)+jo5)=j!5l+(q#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
import os
ALLOWED_HOSTS = [
    "app-f6157d3c-5350-47b5-9efc-b1aa3bbc99ee.cleverapps.io",
    "127.0.0.1",
    "localhost"
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary',
    'cloudinary_storage',
    'Rythukart',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ROOT_URLCONF = 'E_commerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Rythukart', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'E_commerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
import os
from dotenv import load_dotenv

load_dotenv()  # this loads variables from .env into os.environ

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.getenv('MYSQL_ADDON_DB'),
#         'USER': os.getenv('MYSQL_ADDON_USER'),
#         'PASSWORD': os.getenv('MYSQL_ADDON_PASSWORD'),
#         'HOST': os.getenv('MYSQL_ADDON_HOST'),
#         'PORT': os.getenv('MYSQL_ADDON_PORT'),
#     }
# }
# this is for python anywhare deploy
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'SKREDDY$Rythukart',  # Replace 'yourdbname' with your actual database name from the PythonAnywhere Databases tab
        'USER': 'SKREDDY',
        'PASSWORD': 'Siva@6715',    # Replace with the password you set on PythonAnywhere
        'HOST': 'SKREDDY.mysql.pythonanywhere-services.com',
        'PORT': '3306',
    }
}

#  this is for cloud clever deploy
import os
print("CLOUD DB HOST:", os.getenv('MYSQL_ADDON_HOST'))
print("CLOUD DB NAME:", os.getenv('MYSQL_ADDON_DB'))
print("CLOUD DB USER:", os.getenv('MYSQL_ADDON_USER'))
print("CLOUD DB PORT:", os.getenv('MYSQL_ADDON_PORT'))
print("CLOUD DB PASSWORD:", os.getenv('MYSQL_ADDON_PASSWORD'))
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # âœ… for production

# Optional, useful in development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]




DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_URL = '/Login/'
LOGIN_REDIRECT_URL = '/admin_upload/'  # where to go after login

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dak61mpwu',
    'API_KEY': '421252433986936',
    'API_SECRET': 'l0g8Q0OZeceuc7PFrYp4BX7HO64',
}
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
